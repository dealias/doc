1. To use git with emacs, first put

export EDITOR=emacs

in your ~/.bash_profile file.

2. Then use a command like one of the following:

git clone ssh://cascade.math.ualberta.ca/git/tri
git clone http://github.com/vectorgraphics/asymptote
git clone http://github.com/dealias/fftwpp fftw++
git clone http://github.com/dealias/protodns

to make a new working directory for the project in the current directory.

The most useful git commands are

git fetch         (updates your local repo from remote repo)
git merge	  (merges updates in your local repo to your working directory)
git pull          (equivalent to git fetch followed by git merge)
git add FILE      (queue FILE to add to local repo)
git commit -a     (commits changes to local repo)
git push          (updates remote repo with changes in local repo)
git diff          (identifies changes in your working directory)
git status        (describes current state)
git log           (show change log)
git remote -v     (show remote url)
git show HASH     (show commit changes for commit HASH)
git blame FILE    (show author of last commit for each line of FILE)

git branch NAME       (create branch NAME)
git checkout NAME     (checkout branch NAME)
git checkout -b NAME  (equivalent to above two commands)
git branch            (list local branches)
git branch -d NAME    (delete local branch NAME)
git push origin :NAME (delete remote branch NAME)

git checkout @~1   (go one step back in history)
git reset HEAD~1   (remove last commit from local repo)
git rebase -i HASH (squash commits since HASH)
git reset --hard   (abandon all changes to local repo)

git difftool HASH^ HASH      (diff commit relative to its parent)
git log --oneline --decorate (show compact change log with tags)
